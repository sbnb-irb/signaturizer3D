stages:
  - build-docker
  - test
  - lint
  - publish-test

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  image: docker:20.10.16
  stage: build-docker
  services:
    - docker:20.10.16-dind
  only:
    changes:
      - pyproject.toml
      - poetry.lock
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

Run Tests:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - poetry install # install the package itself, the image only has the dependencies
    - poetry run pytest

Lint:
  image: $CONTAINER_TEST_IMAGE
  stage: lint
  script:
    - poetry run black --check .

Build and publish test:
  image: $CONTAINER_TEST_IMAGE
  stage: publish-test
  script:
    - poetry install
    - poetry build
    - poetry config repositories.testpypi https://test.pypi.org/legacy/
    - poetry config pypi-token.testpypi $PYPI_TEST_TOKEN
    - poetry publish --repository testpypi
  only:
    - tags
