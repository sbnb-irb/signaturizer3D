import numpy as np
import pytest


@pytest.fixture
def signature_C():
    smiles = "C"
    # Signature captured with A1 model loaded in unimol_tools
    # fmt: off
    signature_c = np.array([[
        -0.09176869, -0.09230309, -0.09278876,  0.09095952,  0.02165126,
         0.09216648,  0.09049753, -0.09008787,  0.09142682,  0.09209616,
        -0.06786694,  0.04880361,  0.08967396,  0.09168409,  0.09159772,
        -0.06577322,  0.09233385, -0.0921234 ,  0.09194953,  0.09216952,
        -0.08310705, -0.09195956, -0.09126031,  0.09194492,  0.09090706,
        -0.09114204, -0.03240291,  0.0931712 , -0.0859022 , -0.09080284,
         0.09140556, -0.09105089, -0.0916431 ,  0.09313102, -0.09121914,
        -0.09175517, -0.09277003, -0.08987983,  0.09163205,  0.03126003,
        -0.09216055, -0.09082175,  0.09192075,  0.09139172,  0.09247874,
        -0.09078471,  0.09024763,  0.09304998,  0.09086962,  0.09217969,
         0.09209364, -0.09072731,  0.09105907,  0.09101547,  0.09090669,
        -0.09060563, -0.09145523,  0.09112076,  0.09169028,  0.0908412 ,
         0.07901774, -0.03512888, -0.09115534, -0.09188529, -0.0315344 ,
        -0.09231444, -0.09149101, -0.09205813,  0.09160269,  0.09196097,
        -0.05865292,  0.09252463,  0.09130077, -0.09172446,  0.09140788,
        -0.09272634, -0.09075181,  0.09141561,  0.09332587,  0.0913637 ,
        -0.09172942,  0.09121083,  0.09034466, -0.0928335 , -0.0919898 ,
        -0.09228481, -0.0919136 , -0.09175359,  0.07191183, -0.09117071,
        -0.09038644,  0.09112086,  0.09153802, -0.08514521, -0.08704499,
        -0.09099759,  0.09055719, -0.09135619,  0.06394509,  0.07074568,
        -0.08616739,  0.04808807,  0.09245519, -0.09404121,  0.09124337,
        -0.09228519,  0.04805079,  0.09180605, -0.09080315,  0.09146774,
        -0.08064783, -0.04875047, -0.08551046,  0.0728785 , -0.09180541,
        -0.08521657, -0.09262581, -0.09190093,  0.0916356 ,  0.09203634,
         0.07872167, -0.07670218, -0.07603158,  0.09193884, -0.09102505,
         0.09146956, -0.0918367 , -0.08955827]], dtype=np.float32)
    # fmt: off
    return smiles, signature_c


def test_infer_from_smiles(signaturizer, signature_C):
    smiles, expected_sig = signature_C
    smiles_list = [smiles]

    result = signaturizer.infer_from_smiles(smiles_list)

    assert result is not None
    assert result.dtype == np.float32
    assert result.shape == (1, 128)
    assert np.allclose(result, expected_sig)
